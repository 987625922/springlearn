<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/cache
	http://www.springframework.org/schema/cache/spring-cache.xsd"

>
    <!-- Spring中引入其他配置文件 -->
    <import resource="classpath*:/spring/application-base.xml"/>

    <!-- 自动扫描包名下的Component的bean -->
    <context:component-scan base-package="org.learn.springcache"/>

    <cache:annotation-driven/>

    <!--            spring cache 整合 redis （未完成）        -->
    <!-- JedisPool资源池设置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrowconfig}"/>
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}"/>
    </bean>

    <!--获取redis的连接工厂-->
    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"
          p:pool-config-ref="poolConfig"
    />

    <!--获取redisTemplate,template需要redis连接工厂-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>
    <!--  redis缓存的spring cache manager-->
    <bean id="cacheManager" class="org.learn.springcache.cache.RedisCacheManager">
        <property name="caches">
            <set>
                <!--        redis缓存的spring cache 的逻辑实现        -->
                <bean class="org.learn.springcache.cache.RedisCache" p:name="cacheUse"/>
            </set>
        </property>
    </bean>

    <!--      Spring 默认的CacheManager      -->
    <!--    <bean id="cacheManager"-->
    <!--          class="org.springframework.cache.support.SimpleCacheManager">-->
    <!--        <property name="caches">-->
    <!--            &lt;!&ndash; 配置普通的缓存 &ndash;&gt;-->
    <!--            <set>-->
    <!--                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">-->
    <!--                    <property name="name" value="default"/>-->
    <!--                </bean>-->
    <!--                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">-->
    <!--                    <property name="name" value="cacheUse"/>-->
    <!--                </bean>-->
    <!--            </set>-->
    <!--        </property>-->
    <!--    </bean>-->

</beans>