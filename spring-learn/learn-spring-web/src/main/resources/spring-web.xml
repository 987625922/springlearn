<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 声明 handlerMapping -->
    <!-- 声明 BeanNameURI 处理器映射，其为默认的处理器映射 -->
    <!--    <bean id="beanNameUrlHandlerMapping"-->
    <!--          class="org.springframework.springmvc.servlet.handler.BeanNameUrlHandlerMapping"/>-->

    <context:component-scan base-package="org.learn.web.controller"/>

    <!--<mvc:annotation-driven /> 是一种简写形式，完全可以手动配置替代这种简写形式，
    简写形式可以让初学都快速应用默认配置方案。
    <mvc:annotation-driven /> 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter
     两个bean,是spring MVC为@Controllers分发请求所必须的，即解决了@Controller注解使用的前提配置。-->
    <mvc:annotation-driven/>

    <!--    拦截器注册-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--<mvc:mapping path="/api/base/*"/>-->
            <mvc:mapping path="/api/base/userinfo"/>
            <bean class="org.learn.web.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>