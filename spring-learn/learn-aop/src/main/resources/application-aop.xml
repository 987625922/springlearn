<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd"
>

    <!-- =============   aop ===============   -->
    <!-- spring基于JDK 代理和 CGLIB 代理两种动态代理，如果目标对象有实现接口，
    使用 JDK 代理。如果目标对象没有实现接口，则使用 CGLIB 代理。 -->

    <context:component-scan base-package="org.learn.aop"/>

    <!-- 启动AspectJ自动代理,即基于注解的aop使用-->
    <aop:aspectj-autoproxy/>

    <!-- 实例化切面类（就是增强方法所在的类） -->
    <bean id="transactionAop" class="org.learn.aop.xml.TransactionAop"></bean>

    <!-- Aop相关配置 -->
    <aop:config>
        <!-- 切入点表达式定义（定义了一个id为transactionPointcut的切点表达式） -->
        <aop:pointcut expression="execution(* org.learn.aop.xml.*Dao.*(..))"
                      id="transactionPointcut"/>
        <!-- 切面配置 ref使用id为transactionAop的bean为增强方法的bean -->
        <aop:aspect ref="transactionAop">
            <!-- 【环绕通知】 -->
            <aop:around method="arroud" pointcut-ref="transactionPointcut"/>
            <!-- 【前置通知】 在目标方法之前执行 -->
            <aop:before method="beginTransaction" pointcut-ref="transactionPointcut"/>
            <!-- 【后置通知】 -->
            <aop:after method="commit" pointcut-ref="transactionPointcut"/>
            <!-- 【返回后通知】 -->
            <aop:after-returning method="afterReturing" pointcut-ref="transactionPointcut"/>
            <!-- 异常通知 -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="transactionPointcut"/>
        </aop:aspect>
    </aop:config>

</beans>